plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
}

android {
    namespace = "com.example.habit_tracker"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.habit_tracker"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
//plugins {
//    id 'com.android.application'
//    id 'kotlin-android'
//    id 'dev.flutter.flutter-gradle-plugin'
//}
//
//def localProperties = new Properties()
//def localPropertiesFile = rootProject.file('local.properties')
//if (localPropertiesFile.exists()) {
//    localPropertiesFile.withReader('UTF-8') { reader ->
//        localProperties.load(reader)
//    }
//}
//
//def flutterRoot = localProperties.getProperty('flutter.sdk')
//if (flutterRoot == null) {
//    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
//}
//
//def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
//if (flutterVersionCode == null) {
//    flutterVersionCode = '1'
//}
//
//def flutterVersionName = localProperties.getProperty('flutter.versionName')
//if (flutterVersionName == null) {
//    flutterVersionName = '1.0'
//}
//
//def keystoreProperties = new Properties()
//def keystorePropertiesFile = rootProject.file('key.properties')
//if (keystorePropertiesFile.exists()) {
//    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
//}
//
//android {
//    compileSdkVersion 34
//
//    namespace 'com.example.habit_tracker'
//
//    sourceSets {
//        main.java.srcDirs += 'src/main/kotlin'
//    }
//
//    lintOptions {
//        disable 'InvalidPackage'
//    }
//
//    defaultConfig {
//        applicationId "com.example.habit_tracker"
//        minSdkVersion flutter.minSdkVersion
//        targetSdkVersion 34
//        versionCode flutterVersionCode.toInteger()
//        versionName flutterVersionName
//    }
//
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//        coreLibraryDesugaringEnabled true
//    }
//
//    kotlinOptions {
//        jvmTarget = "1.8"
//    }
//
//    signingConfigs {
//        release {
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
//            storePassword keystoreProperties['storePassword']
//        }
//    }
//
//    buildTypes {
//        release {
//            // Enables code shrinking, obfuscation, and optimization for only
//            // your project's release build type.
//            minifyEnabled true
//
//            // Enables resource shrinking, which is performed by the
//            // Android Gradle plugin.
//            shrinkResources true
//
//            // Includes the default ProGuard rules files that are packaged with
//            // the Android Gradle plugin. To learn more, go to the section about
//            // R8 configuration files.
//            proguardFiles getDefaultProguardFile(
//                    'proguard-android-optimize.txt'),
//                    'proguard-rules.pro'
//
//            /// Release
//            signingConfig signingConfigs.release
//        }
//
//        debug {
//            applicationIdSuffix ".debug"
//        }
//    }
//}
//
//flutter {
//    source '../..'
//}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'
    implementation 'com.google.android.play:review:2.0.1'
    implementation 'com.google.android.play:app-update:2.1.0'
}
